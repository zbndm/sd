name: Publish artifacts
description: Publishes artifacts after CI process
runs:
  using: 'composite'
  steps:
    - name: Determine short GitHub SHA
      shell: bash
      run: |
        export GITHUB_SHA_SHORT=$(git rev-parse --short "$GITHUB_SHA")
        echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT" >> $GITHUB_ENV

    - name: Set AppImage file permissions & compress it
      if: matrix.platform == 'ubuntu-latest'
      shell: bash
      run: |
        chmod +x ./target/release/bundle/appimage/spacedrive*.AppImage
        tar -czvf ./Spacedrive-AppImage-${{ env.GITHUB_SHA_SHORT }}.tar.gz ./target/release/bundle/appimage/spacedrive*.AppImage

    - name: Publish artifacts (AppImage)
      if: matrix.platform == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Spacedrive-AppImage-${{ env.GITHUB_SHA_SHORT }}
        path: ./Spacedrive-AppImage-${{ env.GITHUB_SHA_SHORT }}.tar.gz

    - name: Publish artifacts (deb)
      if: matrix.platform == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Spacedrive-deb-${{ env.GITHUB_SHA_SHORT }}
        path: ./target/release/bundle/deb/spacedrive*.deb

    - name: Publish artifacts (server)
      if: matrix.platform == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Spacedrive-server-${{ env.GITHUB_SHA_SHORT }}
        path: ./target/release/server

    - name: Publish artifacts (Windows)
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Spacedrive-Windows-${{ env.GITHUB_SHA_SHORT }}
        path: .\target\release\bundle\msi\*.msi

    - name: Publish artifacts (macOS)
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Spacedrive-macOS-${{ env.GITHUB_SHA_SHORT }}
        path: ./target/release/bundle/macos/*.app
